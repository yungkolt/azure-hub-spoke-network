name: Validate Infrastructure Code

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  validate-scripts:
    runs-on: ubuntu-latest
    name: Validate Bash Scripts
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install ShellCheck
      run: |
        sudo apt-get update
        sudo apt-get install -y shellcheck
    
    - name: Validate deployment scripts
      run: |
        echo "🔍 Checking deployment scripts..."
        find deployment/scripts -name "*.sh" -exec shellcheck -x {} \; || true
        
    - name: Validate test scripts
      run: |
        echo "🔍 Checking test scripts..."
        find testing -name "*.sh" -exec shellcheck -x {} \; || true
        shellcheck test-deployment.sh || true

  validate-json:
    runs-on: ubuntu-latest
    name: Validate JSON Files
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Validate JSON syntax
      run: |
        echo "🔍 Validating JSON files..."
        find . -name "*.json" -type f | while read -r file; do
          echo "Checking $file..."
          python3 -m json.tool "$file" > /dev/null && echo "✅ $file is valid" || echo "❌ $file has syntax errors"
        done

  validate-markdown:
    runs-on: ubuntu-latest
    name: Validate Documentation
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Check README links
      run: |
        echo "🔍 Checking documentation..."
        # Check if key files exist
        test -f README.md && echo "✅ README.md exists" || echo "❌ README.md missing"
        test -f LICENSE && echo "✅ LICENSE exists" || echo "❌ LICENSE missing"
        test -f docs/deployment/step-by-step-guide.md && echo "✅ Deployment guide exists" || echo "❌ Deployment guide missing"
        test -f monitoring/queries/network-analytics.kql && echo "✅ KQL queries exist" || echo "❌ KQL queries missing"

  validate-arm-template-syntax:
    runs-on: ubuntu-latest
    name: Validate ARM Template Syntax
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Validate ARM template syntax
      run: |
        echo "🔍 Validating ARM template syntax..."
        # Simple JSON validation for ARM template
        python3 -m json.tool deployment/arm-templates/main.json > /dev/null && echo "✅ ARM template JSON is valid" || echo "❌ ARM template has JSON syntax errors"
        
        # Check for required ARM template properties
        if grep -q '"$schema"' deployment/arm-templates/main.json; then
          echo "✅ ARM template has schema"
        else
          echo "❌ ARM template missing schema"
        fi
        
        if grep -q '"contentVersion"' deployment/arm-templates/main.json; then
          echo "✅ ARM template has contentVersion"
        else
          echo "❌ ARM template missing contentVersion"
        fi

  validate-monitoring:
    runs-on: ubuntu-latest
    name: Validate Monitoring Configuration
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Check KQL query syntax
      run: |
        echo "🔍 Validating KQL queries..."
        if test -f monitoring/queries/network-analytics.kql; then
          echo "✅ KQL queries file exists"
          # Basic KQL syntax check
          if grep -q "AzureNetworkAnalytics_CL" monitoring/queries/network-analytics.kql; then
            echo "✅ KQL queries contain network analytics"
          fi
          if grep -q "AzureDiagnostics" monitoring/queries/network-analytics.kql; then
            echo "✅ KQL queries contain diagnostic data"
          fi
        else
          echo "❌ KQL queries file missing"
        fi

  project-structure-check:
    runs-on: ubuntu-latest
    name: Validate Project Structure
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Check project structure
      run: |
        echo "🔍 Validating project structure..."
        
        # Check required directories
        test -d deployment/scripts && echo "✅ deployment/scripts exists" || echo "❌ deployment/scripts missing"
        test -d deployment/arm-templates && echo "✅ deployment/arm-templates exists" || echo "❌ deployment/arm-templates missing"
        test -d testing && echo "✅ testing directory exists" || echo "❌ testing directory missing"
        test -d monitoring && echo "✅ monitoring directory exists" || echo "❌ monitoring directory missing"
        test -d docs && echo "✅ docs directory exists" || echo "❌ docs directory missing"
        
        # Check required files
        test -f deployment/scripts/deploy.sh && echo "✅ Main deployment script exists" || echo "❌ Main deployment script missing"
        test -f testing/connectivity-tests.sh && echo "✅ Connectivity tests exist" || echo "❌ Connectivity tests missing"
        test -f test-deployment.sh && echo "✅ Test deployment script exists" || echo "❌ Test deployment script missing"
        
        # Check script permissions (should be executable)
        if test -x deployment/scripts/deploy.sh; then
          echo "✅ Deploy script is executable"
        else
          echo "⚠️ Deploy script may not be executable (run chmod +x)"
        fi
